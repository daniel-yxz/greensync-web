import { useState } from 'react';
import { Link } from 'react-router-dom';
import { BottomNavigation } from '../components/BottomNavigation';
import './Configuracoes.css';

export function Configuracoes() {
  const [notificacoesPush, setNotificacoesPush] = useState(true);
  const [notificacoesEmail, setNotificacoesEmail] = useState(true);
  const [modoEscuro, setModoEscuro] = useState(false);
  const [dadosMoveis, setDadosMoveis] = useState(false);
  const [localizacao, setLocalizacao] = useState(false);
  const [backupAuto, setBackupAuto] = useState(true);

  const handleLimparCache = () => {
    if (window.confirm('Tem certeza que deseja limpar o cache?')) {
      alert('Cache limpo com sucesso!');
    }
  };

  return (
    <div className="configuracoes-container">
      <header className="configuracoes-header">
        <h1>Configura√ß√µes</h1>
      </header>

      <div className="configuracoes-content">
        {/* Se√ß√£o Usu√°rio */}
        <section className="config-section">
          <h2>Usu√°rio</h2>
          <div className="config-list">
            <Link to="/perfil/editar" className="config-item">
              <div className="config-info">
                <span className="config-icon">üë§</span>
                <div>
                  <h3>Editar Perfil</h3>
                  <p>Altere suas informa√ß√µes pessoais</p>
                </div>
              </div>
              <span className="config-arrow">‚Ä∫</span>
            </Link>

            <Link to="/alterar-senha" className="config-item">
              <div className="config-info">
                <span className="config-icon">üîí</span>
                <div>
                  <h3>Alterar Senha</h3>
                  <p>Atualize sua senha de acesso</p>
                </div>
              </div>
              <span className="config-arrow">‚Ä∫</span>
            </Link>

            <button className="config-item">
              <div className="config-info">
                <span className="config-icon">üì§</span>
                <div>
                  <h3>Exportar Dados</h3>
                  <p>Baixe seus dados em PDF</p>
                </div>
              </div>
              <span className="config-arrow">‚Ä∫</span>
            </button>
          </div>
        </section>

        {/* Se√ß√£o Notifica√ß√µes */}
        <section className="config-section">
          <h2>Notifica√ß√µes</h2>
          <div className="config-list">
            <div className="config-item toggle-item">
              <div className="config-info">
                <span className="config-icon">üì±</span>
                <div>
                  <h3>Notifica√ß√µes Push</h3>
                  <p>Receba alertas importantes</p>
                </div>
              </div>
              <label className="toggle">
                <input
                  type="checkbox"
                  checked={notificacoesPush}
                  onChange={(e) => setNotificacoesPush(e.target.checked)}
                />
                <span className="slider"></span>
              </label>
            </div>

            <div className="config-item toggle-item">
              <div className="config-info">
                <span className="config-icon">üìß</span>
                <div>
                  <h3>Notifica√ß√µes por E-mail</h3>
                  <p>Receba relat√≥rios por e-mail</p>
                </div>
              </div>
              <label className="toggle">
                <input
                  type="checkbox"
                  checked={notificacoesEmail}
                  onChange={(e) => setNotificacoesEmail(e.target.checked)}
                />
                <span className="slider"></span>
              </label>
            </div>
          </div>
        </section>

        {/* Se√ß√£o Prefer√™ncias */}
        <section className="config-section">
          <h2>Prefer√™ncias</h2>
          <div className="config-list">
            <div className="config-item toggle-item">
              <div className="config-info">
                <span className="config-icon">üåô</span>
                <div>
                  <h3>Modo Escuro</h3>
                  <p>Interface com tema escuro</p>
                </div>
              </div>
              <label className="toggle">
                <input
                  type="checkbox"
                  checked={modoEscuro}
                  onChange={(e) => setModoEscuro(e.target.checked)}
                />
                <span className="slider"></span>
              </label>
            </div>

            <div className="config-item toggle-item">
              <div className="config-info">
                <span className="config-icon">üì∂</span>
                <div>
                  <h3>Usar Dados M√≥veis</h3>
                  <p>Sincronizar usando dados m√≥veis</p>
                </div>
              </div>
              <label className="toggle">
                <input
                  type="checkbox"
                  checked={dadosMoveis}
                  onChange={(e) => setDadosMoveis(e.target.checked)}
                />
                <span className="slider"></span>
              </label>
            </div>

            <div className="config-item toggle-item">
              <div className="config-info">
                <span className="config-icon">üìç</span>
                <div>
                  <h3>Compartilhar Localiza√ß√£o</h3>
                  <p>Para recomenda√ß√µes clim√°ticas</p>
                </div>
              </div>
              <label className="toggle">
                <input
                  type="checkbox"
                  checked={localizacao}
                  onChange={(e) => setLocalizacao(e.target.checked)}
                />
                <span className="slider"></span>
              </label>
            </div>
          </div>
        </section>

        {/* Se√ß√£o Privacidade */}
        <section className="config-section">
          <h2>Privacidade e Seguran√ßa</h2>
          <div className="config-list">
            <div className="config-item toggle-item">
              <div className="config-info">
                <span className="config-icon">‚òÅÔ∏è</span>
                <div>
                  <h3>Backup Autom√°tico</h3>
                  <p>Salve seus dados na nuvem</p>
                </div>
              </div>
              <label className="toggle">
                <input
                  type="checkbox"
                  checked={backupAuto}
                  onChange={(e) => setBackupAuto(e.target.checked)}
                />
                <span className="slider"></span>
              </label>
            </div>

            <button className="config-item" onClick={handleLimparCache}>
              <div className="config-info">
                <span className="config-icon">üßπ</span>
                <div>
                  <h3>Limpar Cache</h3>
                  <p>Libere espa√ßo no dispositivo</p>
                </div>
              </div>
              <span className="config-arrow">‚Ä∫</span>
            </button>
          </div>
        </section>

        {/* Se√ß√£o Ajuda */}
        <section className="config-section">
          <h2>Ajuda e Suporte</h2>
          <div className="config-list">
            <Link to="/ajuda" className="config-item">
              <div className="config-info">
                <span className="config-icon">‚ùì</span>
                <div>
                  <h3>Ajuda & Suporte</h3>
                  <p>Tire suas d√∫vidas</p>
                </div>
              </div>
              <span className="config-arrow">‚Ä∫</span>
            </Link>

            <Link to="/sobre" className="config-item">
              <div className="config-info">
                <span className="config-icon">‚ÑπÔ∏è</span>
                <div>
                  <h3>Sobre o App</h3>
                  <p>Vers√£o e informa√ß√µes</p>
                </div>
              </div>
              <span className="config-arrow">‚Ä∫</span>
            </Link>
          </div>
        </section>
      </div>

      <BottomNavigation />
    </div>
  );
}